{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "site_name": {
            "defaultValue": "bravorbest",
            "type": "String"
        },
        "server_name": {
            "defaultValue": "bravorbest-server",
            "type": "String"
        },
        "server_password": {
            "type": "securestring"
        },
        "serverfarm_name": {
            "defaultValue": "ASP-BWebAppDb-c32a",
            "type": "String"
        },
        "vnet_name": {
            "defaultValue": "bravorbestVnet",
            "type": "String"
        },
        "privateEndpoint_name": {
            "defaultValue": "bravorbestDbEndpoint",
            "type": "String"
        },
        "privateDnsZone_name": {
            "defaultValue": "privatelink.database.windows.net",
            "type": "String"
        },
        "privateDnsZone_redis_name": {
            "defaultValue": "privatelink.redis.cache.windows.net",
            "type": "String"
        }
    },
    "variables": {
        "subnetAlpha": "primarySubnet",
        "subnetBravo": "appSubnet",
        "privatEndIpConfig": "[concat('privateEndpointIpConfig.', newGuid())]",
        "databaseName": "bravorbest-database",
        "sqlnic_name": "[concat(parameters('privateEndpoint_name'),'.nic', newGuid())]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZone_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 2,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2018-09-01",
            "name": "[parameters('privateDnsZone_redis_name')]",
            "location": "global",
            "properties": {
                "maxNumberOfRecordSets": 25000,
                "maxNumberOfVirtualNetworkLinks": 1000,
                "maxNumberOfVirtualNetworkLinksWithRegistration": 100,
                "numberOfRecordSets": 1,
                "numberOfVirtualNetworkLinks": 0,
                "numberOfVirtualNetworkLinksWithRegistration": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2022-08-01-preview",
            "name": "[parameters('server_name')]",
            "location": "[resourceGroup().location]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[concat(parameters('server_name'), '-admin')]",
                "administratorLoginPassword": "[parameters('server_password')]",
                "version": "12.0",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-09-01",
            "name": "[parameters('serverfarm_name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "family": "Pv2",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[variables('sqlnic_name')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetAlpha'))]"
            ],
            "kind": "Regular",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('privatEndIpConfig')]",
                        "id": "[concat(resourceId('Microsoft.Network/networkInterfaces', variables('sqlnic_name')), '/ipConfigurations/', variables('privatEndIpConfig'))]",
                        "type": "Microsoft.Network/networkInterfaces/ipConfigurations",
                        "properties": {
                            "privateIPAddress": "10.0.0.4",
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetAlpha'))]"
                            },
                            "primary": true,
                            "privateIPAddressVersion": "IPv4",
                            "privateLinkConnectionProperties": {
                                "groupId": "sqlServer",
                                "requiredMemberName": "sqlServer",
                                "fqdns": [
                                    "[concat(parameters('server_name'),'.database.windows.net')]"
                                ]
                            }
                        }
                    }
                ],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableAcceleratedNetworking": false,
                "enableIPForwarding": false,
                "disableTcpStateTracking": false,
                "nicType": "Standard"
            }
        },        
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZone_name'), '/', parameters('server_name'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZone_name'))]"
            ],
            "properties": {
                "ttl": 10,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.0.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZone_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZone_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZone_redis_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZone_redis_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vnet_name'), '/alpharbestAppSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "serviceEndpoints": [],
                "delegations": [
                    {
                        "name": "dlg-appServices",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetBravo')), '/delegations/dlg-appServices')]",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('vnet_name'), '/', variables('subnetAlpha'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "serviceEndpoints": [],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },        
        {
            "type": "Microsoft.Sql/servers/connectionPolicies",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/default')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "connectionType": "Default"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/', variables('databaseName'))]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "sku": {
                "name": "GP_Gen5",
                "tier": "GeneralPurpose",
                "family": "Gen5",
                "capacity": 2
            },
            "kind": "v12.0,user,vcore",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 34359738368,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "licenseType": "LicenseIncluded",
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Geo",
                "maintenanceConfigurationId": "[concat('/subscriptions/', subscription().id ,'/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default')]",
                "isLedgerOn": false,
                "availabilityZone": "NoPreference"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advancedThreatProtectionSettings",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingPolicies",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('server_name'), '/master/Default')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "auditingState": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/auditingSettings",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/extendedAuditingSettings",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "isAzureMonitorTargetEnabled": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/securityAlertPolicies",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/master/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/devOpsAuditingSettings",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/encryptionProtector",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyName": "ServiceManaged",
                "serverKeyType": "ServiceManaged",
                "autoRotationEnabled": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/extendedAuditingSettings",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "retentionDays": 0,
                "auditActionsAndGroups": [],
                "isStorageSecondaryKeyInUse": false,
                "isAzureMonitorTargetEnabled": false,
                "isManagedIdentityInUse": false,
                "state": "Disabled",
                "storageAccountSubscriptionId": "00000000-0000-0000-0000-000000000000"
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ]
        },
        {
            "type": "Microsoft.Sql/servers/keys",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/ServiceManaged')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "kind": "servicemanaged",
            "properties": {
                "serverKeyType": "ServiceManaged"
            }
        },
        {
            "type": "Microsoft.Sql/servers/securityAlertPolicies",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Disabled",
                "disabledAlerts": [
                    ""
                ],
                "emailAddresses": [
                    ""
                ],
                "emailAccountAdmins": false,
                "retentionDays": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/sqlVulnerabilityAssessments",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Disabled"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('site_name'), '/ftp')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('site_name'), '/scm')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_name'))]"
            ],
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('site_name'), '/web')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_name'))]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOTNETCORE|6.0",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$alpharbest",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "e1ea64bc-65be-4ef2-b566-6e68c8b6c1a9_alpharbestAppSubnet",
                "vnetRouteAllEnabled": true,
                "vnetPrivatePortsCount": 0,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('site_name'), '/', parameters('site_name'), '.azurewebsites.net')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_name'))]"
            ],
            "properties": {
                "siteName": "[parameters('site_name')]",
                "hostNameType": "Verified"
            }
        },                
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZone_name'), '/', parameters('privateDnsZone_name'), '-dblink')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZone_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2018-09-01",
            "name": "[concat(parameters('privateDnsZone_redis_name'), '/', parameters('privateDnsZone_redis_name'), '-applink')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZone_redis_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
            ],
            "properties": {
                "registrationEnabled": false,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnet_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2022-11-01",
            "name": "[parameters('privateEndpoint_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetAlpha'))]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[parameters('privateEndpoint_name')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoint_name')))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]",
                            "groupIds": [
                                "sqlServer"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetAlpha'))]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": []
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2022-11-01",
            "name": "[concat(parameters('privateEndpoint_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZone_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "database-config",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZone_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2022-11-01",
            "name": "[parameters('vnet_name')]",
            "location": "eastus",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetAlpha'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetBravo'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetAlpha')]",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetAlpha'))]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "[variables('subnetBravo')]",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetBravo'))]",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "serviceEndpoints": [],
                            "delegations": [
                                {
                                    "name": "dlg-appServices",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetBravo')), '/delegations/dlg-appServices')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/advisors",
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('server_name'), '/',variables('databaseName'),'/ForceLastGoodPlan')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('server_name'), variables('databaseName'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "autoExecuteValue": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupLongTermRetentionPolicies",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/',variables('databaseName'),'/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('server_name'), variables('databaseName'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "weeklyRetention": "PT0S",
                "monthlyRetention": "PT0S",
                "yearlyRetention": "PT0S",
                "weekOfYear": 0
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/backupShortTermRetentionPolicies",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/',variables('databaseName'),'/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('server_name'), variables('databaseName'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "retentionDays": 7,
                "diffBackupIntervalInHours": 12
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/geoBackupPolicies",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/',variables('databaseName'),'/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('server_name'), variables('databaseName'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/ledgerDigestUploads",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/',variables('databaseName'),'/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('server_name'), variables('databaseName'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {}
        },
        {
            "type": "Microsoft.Sql/servers/databases/transparentDataEncryption",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/',variables('databaseName'),'/Current')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('server_name'), variables('databaseName'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases/vulnerabilityAssessments",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/',variables('databaseName'),'/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', parameters('server_name'), variables('databaseName'))]",
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]"
            ],
            "properties": {
                "recurringScans": {
                    "isEnabled": false,
                    "emailSubscriptionAdmins": true
                }
            }
        },
        {
            "type": "Microsoft.Sql/servers/privateEndpointConnections",
            "apiVersion": "2022-08-01-preview",
            "name": "[concat(parameters('server_name'), '/', parameters('privateEndpoint_name'),'-', newGuid())]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', parameters('server_name'))]",
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_name'))]"
            ],
            "properties": {
                "privateEndpoint": {
                    "id": "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoint_name'))]"
                },
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-approved"
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "name": "[parameters('site_name')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarm_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetBravo'))]"
            ],
            "kind": "app,linux",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('site_name'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('site_name'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarm_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "vnetRouteAllEnabled": true,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOTNETCORE|6.0",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "779251ADFEEE6DEFE2AE040125335CC64DC9737A22C6B5B76C2E7AE3AD134AC8",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), concat(parameters('site_name'), 'AppSubnet'))]",
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/virtualNetworkConnections",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('site_name'), '/', newGuid() ,'_', parameters('site_name'), 'AppSubnet')]",
            "location": "East US",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('site_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetBravo'))]"
            ],
            "properties": {
                "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnet_name'), variables('subnetBravo'))]",
                "isSwift": true
            }
        }
    ]
}